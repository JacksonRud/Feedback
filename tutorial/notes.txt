first i am going to review what i did yesterday
The first step was installing node js and express, we ended up having to use the sudo code to install express globally 
now we create a node test called john2 by typing in "express john2"
now i will change the location of john 2 with finder, I wish i had a better way to do this 

now the next step is to edit the dependencies, this is done by changing the package.son file to add the dependencies we will use, it is very easy to make a mistake when entering the code. 
next we solidify what we did by directing the program to install the dependencies though terminal. this is done by entering "npm install"
i had trouble first going to the folder but then i realized that comp notes is a bad title because of the space so i renamed it COMPNOTES. 
then it was easy 
there were a lot of warnings but it seemed to work 
still in the john2 folder i enter the command mkdir data, i don't know why but apparently it does something to save mongo db
suddenly all my files in sublime disappeared but that was solved by reopening file 
in the john 2 folder i type in nom start and then open the localhost:3000 in my browser. 
okay now i am going to learn more about java script and stop the timer. 
  



I am starting to think about 30 minute sprints and about 4 minute breaks then reorganize. alright, in this next thirty i am going to learn javascript alongside the tutorial

A JavaScript file, which uses exports to return a function or variable to the outside world, is called a module.

we can run js files in terminal by going to the file and typing node, and then the file name 

ask devised about modules 
what is a directory 

great to be able to add tags to example 

with my require example added i am going back the example 

so first we are looking at the heart of the app , "app.js"

in the first part we see 

C:\NODE\NODETEST1\APP.JS
var express = require('express');
var path = require('path');
var favicon = require('serve-favicon');
var logger = require('morgan');
var cookieParser = require('cookie-parser');
var bodyParser = require('body-parser');

var routes = require('./routes/index');
var users = require('./routes/users');

this creates javascript variables 
idunderstand 
his creates a bunch of basic JavaScript variables and ties them to certain packages, dependencies, node functionality, and routes. 

then there is 
var app = express();
which instates express
then the next section configure a bunch of express stuff with .use??
understand .exports

So i am reading through the lets make a hello world app part
I should also understand the exports thing, i think i did some research on that already 
should have rule for naming files
so we are going to start by adding a new app.use directive to app.js 
what are route files?
maybe tutorial should go quickly though then slower through again type process
what is extends?
so we now have the goal of this part of the tutorial, which si ago add a page called http://localhost:3000/helloworld and make that display a different message. 
to do that, in our index.js folder, above module.port line, we add
/* GET Hello World page. */
router.get('/helloworld', function(req, res) {
    res.render('jamie', { title: 'Hello, World!' })
});
a lot of this is intuitive, it tells the router what page will happen when we type localhost/helloworld, it says to pull up the page titles jamie, and put the title as hello world. The only problem is that there is no page names jamie so we have to make one. 
so we make one in the views folder called jamie.jade, we can copy and pasty index.jade to get the ball rolling 
learn to go all the way up in terminal 
tab is damn usuful in termianl
running into problem because advice for windows and not mac
how to find path to something 
what is -p

I am stuck on the ruing mongo part of this tutorial 

maybe make sprint list about stuff i don't understand 



 
